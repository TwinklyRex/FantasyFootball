{
    "type": [
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        2
    ],
    "data": [
        "\nR version 4.0.3 (2020-10-10) -- \"Bunny-Wunnies Freak Out\"\nCopyright (C) 2020 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n[Workspace loaded from ~/R_FPL/R_FPL/.RData]\n\n",
        "> ",
        "paste0(\"Just like the other estimated 7.5 million Fantasy Football Players in the world, I compete in a mini-league with my friends. In this report, I am going to analyse the statistics behind this years (2021) mini-league beginning with how the league table has changed each gameweek.\")",
        "[1] \"Just like the other estimated 7.5 million Fantasy Football Players in the world, I compete in a mini-league with my friends. In this report, I am going to analyse the statistics behind this years (2021) mini-league beginning with how the league table has changed each gameweek.\"\n",
        "> ",
        "#ids for each team",
        "> ",
        "ids <- c(846352, 3215836, 2205222, 2436805, 4426769, 3878948, 3968541, 2464418, 254903, 2694508, 2856693)",
        "> ",
        "",
        "> ",
        "#scrape data to get each teams weekly performance",
        "> ",
        "myleague <- lapply(ids, get_entry_season)",
        "Error in match.fun(FUN) : object 'get_entry_season' not found\n",
        "> ",
        "#installation",
        "> ",
        "",
        "> ",
        "if (!require(remotes)) {",
        "+ ",
        "install.packages(\"remotes\") ",
        "+ ",
        "}",
        "> ",
        "install.packages(\"dplyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "remotes::install_github(\"wiscostret/fplscrapR\")",
        "> ",
        "",
        "> ",
        "library(fplscrapR)",
        "\nRestarting R session...\n\n",
        "> ",
        "#ids for each team",
        "> ",
        "ids <- c(846352, 3215836, 2205222, 2436805, 4426769, 3878948, 3968541, 2464418, 254903, 2694508, 2856693)",
        "> ",
        "",
        "> ",
        "#scrape data to get each teams weekly performance",
        "> ",
        "myleague <- lapply(ids, get_entry_season)",
        "Error in match.fun(FUN) : object 'get_entry_season' not found\n",
        "> ",
        "#ids for each team",
        "> ",
        "ids <- c(846352, 3215836, 2205222, 2436805, 4426769, 3878948, 3968541, 2464418, 254903, 2694508, 2856693)",
        "> ",
        "",
        "> ",
        "#scrape data to get each teams weekly performance",
        "> ",
        "myleague <- lapply(ids)",
        "Error in match.fun(FUN) : argument \"FUN\" is missing, with no default\n",
        "> ",
        "#we fetch the entry information using get_entry",
        "> ",
        "df <- get_entry(entryid=846352)",
        "Error in get_entry(entryid = 846352) : \n  could not find function \"get_entry\"\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#we fetch the entry information using get_entry",
        "> ",
        "df <- get_entry(entryid=846352)",
        "> ",
        "",
        "> ",
        "df$leagues$classic %>%",
        "+ ",
        "  # selecting the columns of interest here",
        "+ ",
        "  select(name,entry_last_rank) ",
        "Error in select(., name, entry_last_rank) : \n  could not find function \"select\"\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#we fetch the entry information using get_entry",
        "> ",
        "df <- get_entry(entryid=846352)",
        "> ",
        "",
        "> ",
        "df$leagues$classic %>%",
        "+ ",
        "  # selecting the columns of interest here",
        "+ ",
        "  dplyr::select(name,entry_last_rank) ",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#ids for each team",
        "> ",
        "ids <- c(846352, 3215836, 2205222, 2436805, 4426769, 3878948, 3968541, 2464418, 254903, 2694508, 2856693)",
        "> ",
        "",
        "> ",
        "#scrape data to get each teams weekly performance",
        "> ",
        "myleague <- lapply(ids, get_entry_season)",
        "> ",
        "",
        "> ",
        "#add to one data frame",
        "> ",
        "myleague_df <- bind_rows(myleague)",
        "Error in bind_rows(myleague) : could not find function \"bind_rows\"\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#ids for each team",
        "> ",
        "ids <- c(846352, 3215836, 2205222, 2436805, 4426769, 3878948, 3968541, 2464418, 254903, 2694508, 2856693)",
        "> ",
        "",
        "> ",
        "#scrape data to get each teams weekly performance",
        "> ",
        "myleague <- lapply(ids, get_entry_season)",
        "> ",
        "",
        "> ",
        "#add to one data frame",
        "> ",
        "myleague_df <- dplyr::bind_rows(myleague)",
        "> ",
        "myleague_df <- arrange(myleague_df,event,overall_rank)",
        "Error in arrange(myleague_df, event, overall_rank) : \n  could not find function \"arrange\"\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#ids for each team",
        "> ",
        "ids <- c(846352, 3215836, 2205222, 2436805, 4426769, 3878948, 3968541, 2464418, 254903, 2694508, 2856693)",
        "> ",
        "",
        "> ",
        "#scrape data to get each teams weekly performance",
        "> ",
        "myleague <- lapply(ids, get_entry_season)",
        "> ",
        "",
        "> ",
        "#add to one data frame",
        "> ",
        "myleague_df <- dplyr::bind_rows(myleague)",
        "> ",
        "myleague_df <- dplyr::arrange(myleague_df,event,overall_rank)",
        "> ",
        "",
        "> ",
        "#work out Week by week rank",
        "> ",
        "myleague_df <- myleague_df %>%",
        "+ ",
        "dplyr::group_by(event) %>%",
        "+ ",
        "dplyr::mutate(week_rank = rank(overall_rank, ties.method = 'first'))",
        "> ",
        "",
        "> ",
        "#title of league",
        "> ",
        "league_title = 'The High Rollers'",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#colour picker: http://tristen.ca/hcl-picker/#/hlc/15/0.81/25303A/F2ED7C",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "fpl <- ggplot(myleague_df, aes(x = event, y = week_rank, group = name)) + geom_line(aes(colour = name)) + geom_text(data = myleague_df[myleague_df$event == max(myleague_df$event),], aes(label = paste0(name,' (',total_points,' pts)')), vjust = -0.25, nudge_x = 2, size = 6) + labs(title = paste0(league_title, ' League'), x = 'Gameweek', y = 'Rank',  subtitle = paste0('Gameweek ',max(myleague_df$event))) + theme_minimal() + scale_color_discrete(name = \"Player Name\") +  scale_y_continuous(trans = \"reverse\")",
        "Error in ggplot(myleague_df, aes(x = event, y = week_rank, group = name)) : \n  could not find function \"ggplot\"\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(ggplot2)",
        "> ",
        "#ids for each team",
        "> ",
        "ids <- c(846352, 3215836, 2205222, 2436805, 4426769, 3878948, 3968541, 2464418, 254903, 2694508, 2856693)",
        "> ",
        "",
        "> ",
        "#scrape data to get each teams weekly performance",
        "> ",
        "myleague <- lapply(ids, get_entry_season)",
        "> ",
        "",
        "> ",
        "#add to one data frame",
        "> ",
        "myleague_df <- dplyr::bind_rows(myleague)",
        "> ",
        "myleague_df <- dplyr::arrange(myleague_df,event,overall_rank)",
        "> ",
        "",
        "> ",
        "#work out Week by week rank",
        "> ",
        "myleague_df <- myleague_df %>%",
        "+ ",
        "dplyr::group_by(event) %>%",
        "+ ",
        "dplyr::mutate(week_rank = rank(overall_rank, ties.method = 'first'))",
        "> ",
        "",
        "> ",
        "#title of league",
        "> ",
        "league_title = 'The High Rollers'",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#colour picker: http://tristen.ca/hcl-picker/#/hlc/15/0.81/25303A/F2ED7C",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "fpl <- ggplot(myleague_df, aes(x = event, y = week_rank, group = name)) + geom_line(aes(colour = name)) + geom_text(data = myleague_df[myleague_df$event == max(myleague_df$event),], aes(label = paste0(name,' (',total_points,' pts)')), vjust = -0.25, nudge_x = 2, size = 6) + labs(title = paste0(league_title, ' League'), x = 'Gameweek', y = 'Rank',  subtitle = paste0('Gameweek ',max(myleague_df$event))) + theme_minimal() + scale_color_discrete(name = \"Player Name\") +  scale_y_continuous(trans = \"reverse\")",
        "> ",
        "",
        "> ",
        "plotly:: ggplotly(fpl)",
        "> ",
        "",
        "> ",
        "#save png",
        "> ",
        "setwd(\"C:\\\\Users\\\\catha\\\\OneDrive\\\\Documents\\\\R_FPL\\\\R_FPL\")",
        "> ",
        "ggsave(paste0('GW',max(myleague_df$event),'.png'), last_plot(), height = 10, width = 40)",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#scrape data to get each teams weekly captain",
        "> ",
        "captains <- get_entry_captain(ids, myleague_df$event[1:21])",
        "> ",
        "",
        "> ",
        "#add to one data frame",
        "> ",
        "captains_df <- bind_rows(captains)",
        "Error in bind_rows(captains) : could not find function \"bind_rows\"\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#scrape data to get each teams weekly captain",
        "> ",
        "captains <- get_entry_captain(ids, myleague_df$event[1:21])",
        "> ",
        "",
        "> ",
        "#add to one data frame",
        "> ",
        "captains_df <- dplyr::bind_rows(captains)",
        "> ",
        "captains_df <- dplyr::arrange(captains_df,event)",
        "> ",
        "",
        "> ",
        "ggplot(captains_df, aes(x = captains, group = playername)) + geom_histogram(color = name)",
        "Error in layer(data = data, mapping = mapping, stat = stat, geom = GeomBar,  : \n  object 'name' not found\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#scrape data to get each teams weekly captain",
        "> ",
        "captains <- get_entry_captain(ids, myleague_df$event[1:21])",
        "> ",
        "",
        "> ",
        "#add to one data frame",
        "> ",
        "captains_df <- dplyr::bind_rows(captains)",
        "> ",
        "captains_df <- dplyr::arrange(captains_df,event)",
        "> ",
        "",
        "> ",
        "ggplot(captains_df, aes(x = captains, group = playername)) + geom_histogram()",
        "Error: Aesthetics must be either length 1 or the same as the data (231): x\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "#we fetch my player selection picks for the next gameweek",
        "> ",
        "picks <- get_entry_picks(entryid=846352,gw=21)$picks",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# fetch the Official FPL Expected Points projections ",
        "> ",
        "df <- get_player_info() %>%",
        "+ ",
        "  select(id,playername,ep_next) %>%",
        "+ ",
        "  mutate(\"element\"=id)",
        "> ",
        "",
        "> ",
        "#indicate expected points projection is a numeric vector",
        "> ",
        "df$ep_next <- as.numeric(df$ep_next)",
        "> ",
        "",
        "> ",
        "#",
        "> ",
        "df2 <- left_join(picks,df,by=\"element\") %>% select(playername,is_captain,is_vice_captain,ep_next)",
        "> ",
        "",
        "> ",
        "colnames(df2) = c(\"Player Name\", \"Captain\", \"Vice Captain\", \"Expected Points\")",
        "> ",
        "",
        "> ",
        "df2",
        "> ",
        "",
        "> ",
        "#Add up all the expected points of the players I have picked for gameweek 21",
        "> ",
        "print(sum(df2$ep_next[1:11]))",
        "[1] 0\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#we fetch the entry information using get_entry",
        "> ",
        "df <- get_entry(entryid=846352)",
        "> ",
        "",
        "> ",
        "df$leagues$classic %>%",
        "+ ",
        "  # selecting the columns of interest here",
        "+ ",
        "  dplyr::select(name,entry_last_rank) ",
        "> ",
        "colnames(df) <- c(\"League Name\", \"Current Rank\")",
        "Error in `colnames<-`(`*tmp*`, value = c(\"League Name\", \"Current Rank\" : \n  attempt to set 'colnames' on an object with less than two dimensions\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#we fetch the entry information using get_entry",
        "> ",
        "df <- get_entry(entryid=846352)",
        "> ",
        "",
        "> ",
        "df$leagues$classic %>%",
        "+ ",
        "  # selecting the columns of interest here",
        "+ ",
        "  dplyr::select(name,entry_last_rank) ",
        "> ",
        "",
        "> ",
        "#rename table columns",
        "> ",
        "colnames(df$leagues$classic) <- c(\"League Name\", \"Current Rank\")",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#we fetch the entry information using get_entry",
        "> ",
        "df <- get_entry(entryid=846352)",
        "> ",
        "",
        "> ",
        "df$leagues$classic %>%",
        "+ ",
        "  # selecting the columns of interest here",
        "+ ",
        "  dplyr::select(name,entry_last_rank) %>%",
        "+ ",
        "",
        "+ ",
        "#rename table columns",
        "+ ",
        "colnames(df$leagues$classic) <- c(\"League Name\", \"Current Rank\")",
        "Error in df$leagues$classic %>% dplyr::select(name, entry_last_rank) %>%  : \n  could not find function \"%>%<-\"\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#we fetch the entry information using get_entry",
        "> ",
        "df <- get_entry(entryid=846352)",
        "> ",
        "",
        "> ",
        "df$leagues$classic %>%",
        "+ ",
        "  # selecting the columns of interest here",
        "+ ",
        "  dplyr::select(name,entry_last_rank)",
        "> ",
        "",
        "> ",
        "#rename table columns",
        "> ",
        "colnames(df) <- c(\"League Name\", \"Current Rank\")",
        "Error in `colnames<-`(`*tmp*`, value = c(\"League Name\", \"Current Rank\" : \n  attempt to set 'colnames' on an object with less than two dimensions\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#we fetch the entry information using get_entry",
        "> ",
        "df <- get_entry(entryid=846352)",
        "> ",
        "",
        "> ",
        "df$leagues$classic %>%",
        "+ ",
        "  # selecting the columns of interest here",
        "+ ",
        "  dplyr::select(name,entry_last_rank)",
        "> ",
        "",
        "> ",
        "#rename table columns",
        "> ",
        "colnames(df$leagues) <- c(\"League Name\", \"Current Rank\")",
        "Error in `colnames<-`(`*tmp*`, value = c(\"League Name\", \"Current Rank\" : \n  attempt to set 'colnames' on an object with less than two dimensions\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "#we fetch the entry information using get_entry",
        "> ",
        "df <- get_entry(entryid=846352)",
        "> ",
        "",
        "> ",
        "df$leagues$classic %>%",
        "+ ",
        "  # selecting the columns of interest here",
        "+ ",
        "  dplyr::select(name,entry_last_rank)",
        "> ",
        "",
        "> ",
        "#rename table columns",
        "> ",
        "colnames(df$leagues$classic) <- c(\"League Name\", \"Current Rank\")",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "#we fetch my player selection picks for the next gameweek",
        "> ",
        "picks <- get_entry_picks(entryid=846352,gw=21)$picks",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# fetch the Official FPL Expected Points projections ",
        "> ",
        "df <- get_player_info() %>%",
        "+ ",
        "  select(id,playername,ep_next) %>%",
        "+ ",
        "  mutate(\"element\"=id)",
        "> ",
        "",
        "> ",
        "#indicate expected points projection is a numeric vector",
        "> ",
        "df$ep_next <- as.numeric(df$ep_next)",
        "> ",
        "",
        "> ",
        "#",
        "> ",
        "df2 <- left_join(picks,df,by=\"element\") %>% select(playername,is_captain,is_vice_captain,ep_next)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#rename table columns",
        "> ",
        "colnames(df2) = c(\"Player Name\", \"Captain\", \"Vice Captain\", \"Expected Points\")",
        "> ",
        "",
        "> ",
        "df2",
        "> ",
        "",
        "> ",
        "#Add up all the expected points of the players I have picked for gameweek 21",
        "> ",
        "ep <- sum(df2$ep_next[1:11])",
        "> ",
        "",
        "> ",
        "new_row <- c(\"\", \"\", \"\", ep)  ",
        "> ",
        "",
        "> ",
        "ep_table <- rbind(df2, new_row)",
        "> ",
        "ep_table",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "#we fetch my player selection picks for the next gameweek",
        "> ",
        "picks <- get_entry_picks(entryid=846352,gw=21)$picks",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# fetch the Official FPL Expected Points projections ",
        "> ",
        "df <- get_player_info() %>%",
        "+ ",
        "  select(id,playername,ep_next) %>%",
        "+ ",
        "  mutate(\"element\"=id)",
        "> ",
        "",
        "> ",
        "#indicate expected points projection is a numeric vector",
        "> ",
        "df$ep_next <- as.numeric(df$ep_next)",
        "> ",
        "",
        "> ",
        "#",
        "> ",
        "df2 <- left_join(picks,df,by=\"element\") %>% select(playername,is_captain,is_vice_captain,ep_next)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#rename table columns",
        "> ",
        "colnames(df2) = c(\"Player Name\", \"Captain\", \"Vice Captain\", \"Expected Points\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#Add up all the expected points of the players I have picked for gameweek 21",
        "> ",
        "ep <- sum(df2$ep_next[1:11])",
        "> ",
        "",
        "> ",
        "new_row <- c(\"\", \"\", \"\", ep)  ",
        "> ",
        "",
        "> ",
        "ep_table <- rbind(df2, new_row)",
        "> ",
        "ep_table",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "#we fetch my player selection picks for the next gameweek",
        "> ",
        "picks <- get_entry_picks(entryid=846352,gw=21)$picks",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# fetch the Official FPL Expected Points projections ",
        "> ",
        "df <- get_player_info() %>%",
        "+ ",
        "  select(id,playername,ep_next) %>%",
        "+ ",
        "  mutate(\"element\"=id)",
        "> ",
        "",
        "> ",
        "#indicate expected points projection is a numeric vector",
        "> ",
        "df$ep_next <- as.numeric(df$ep_next)",
        "> ",
        "",
        "> ",
        "#",
        "> ",
        "df2 <- left_join(picks,df,by=\"element\") %>% select(playername,is_captain,is_vice_captain,ep_next)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#rename table columns",
        "> ",
        "colnames(df2) = c(\"Player Name\", \"Captain\", \"Vice Captain\", \"Expected Points\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#Add up all the expected points of the players I have picked for gameweek 21",
        "> ",
        "ep <- abs(df2$ep_next[1:11])",
        "Error in abs(df2$ep_next[1:11]) : \n  non-numeric argument to mathematical function\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "#we fetch my player selection picks for the next gameweek",
        "> ",
        "picks <- get_entry_picks(entryid=846352,gw=21)$picks",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "# fetch the Official FPL Expected Points projections ",
        "> ",
        "df <- get_player_info() %>%",
        "+ ",
        "  select(id,playername,ep_next) %>%",
        "+ ",
        "  mutate(\"element\"=id)",
        "> ",
        "",
        "> ",
        "#indicate expected points projection is a numeric vector",
        "> ",
        "df$ep_next <- as.numeric(df$ep_next)",
        "> ",
        "",
        "> ",
        "#",
        "> ",
        "df2 <- left_join(picks,df,by=\"element\") %>% select(playername,is_captain,is_vice_captain,ep_next)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#rename table columns",
        "> ",
        "colnames(df2) = c(\"Player Name\", \"Captain\", \"Vice Captain\", \"Expected Points\")",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#Add up all the expected points of the players I have picked for gameweek 21",
        "> ",
        "ep <- sum(df2$ep_next[1:11])",
        "> ",
        "",
        "> ",
        "new_row <- c(\"\", \"\", \"\", ep)  ",
        "> ",
        "",
        "> ",
        "ep_table <- rbind(df2, new_row)",
        "> ",
        "ep_table",
        "> ",
        "#installation",
        "> ",
        "",
        "> ",
        "if (!require(remotes)) {",
        "+ ",
        "install.packages(\"remotes\") ",
        "+ ",
        "}",
        "> ",
        "install.packages(\"dplyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"data.table\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"formattable\")",
        "\nRestarting R session...\n\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(formattable)",
        "Error in library(formattable) : there is no package called ‘formattable’\n",
        "> ",
        "#installation",
        "> ",
        "",
        "> ",
        "if (!require(remotes)) {",
        "+ ",
        "install.packages(\"remotes\") ",
        "+ ",
        "}",
        "> ",
        "install.packages(\"dplyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"data.table\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"formattable\")",
        "\nRestarting R session...\n\n\nRestarting R session...\n\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(formattable)",
        "Error in library(formattable) : there is no package called ‘formattable’\n",
        "> ",
        "#installation",
        "> ",
        "",
        "> ",
        "if (!require(remotes)) {",
        "+ ",
        "install.packages(\"remotes\") ",
        "+ ",
        "}",
        "> ",
        "install.packages(\"dplyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"data.table\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"formattable\")",
        "\nRestarting R session...\n\n\nRestarting R session...\n\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(formattable)",
        "Error in library(formattable) : there is no package called ‘formattable’\n",
        "> ",
        "#installation",
        "> ",
        "",
        "> ",
        "if (!require(remotes)) {",
        "+ ",
        "install.packages(\"remotes\") ",
        "+ ",
        "}",
        "> ",
        "install.packages(\"dplyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"data.table\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"formattable\")",
        "\nRestarting R session...\n\n\nRestarting R session...\n\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(formattable)",
        "Error in library(formattable) : there is no package called ‘formattable’\n",
        "> ",
        "library(fplscrapR)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(formattable)",
        "Error in library(formattable) : there is no package called ‘formattable’\n",
        "> ",
        "#installation",
        "> ",
        "",
        "> ",
        "if (!require(remotes)) {",
        "+ ",
        "install.packages(\"remotes\") ",
        "+ ",
        "}",
        "> ",
        "install.packages(\"dplyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"data.table\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "devtools::install_github(\"renkun-ken/formattable\")",
        "Error in loadNamespace(name) : there is no package called ‘devtools’\n",
        "\nRestarting R session...\n\n"
    ]
}